#include <LiquidCrystal.h>

const int sensorLDR = A0;
const int buzzer = 12;
const int ledVerde = 8;
const int ledAmarelo = 9;
const int ledVermelho = 10;



 

LiquidCrystal lcd(13, 7, 6, 5, 4, 3, 2);

// Emojis personalizados
byte shit[8] = {
  B00000,
  B10001,
  B00000,
  B00000,
  B01110,
  B10001,
  B00000,
};

byte smile[8] = {
  B00000,
  B10001,
  B00000,
  B00000,
  B10001,
  B01110,
  B00000,
};

byte serious[8] = {
  B00000,
  B10001,
  B00000,
  B00000,
  B11111,
  B00000,
  B00000,
};

// Parte de cima da taça (linha 0)
byte vinhoCima[8] = {
  B00100,
  B11111,
  B11111,
  B11111,
  B11111,
  B01110,
  B00100,
  B00100
};

// Parte de baixo da taça (linha 1)
byte vinhoBaixo[8] = {
  B00100,
  B00100,
  B00100,
  B00100,
  B00100,
  B00100,
  B01110,
  B00000
};

void setup() {
  pinMode(buzzer, OUTPUT);
  Serial.begin(9600);

  pinMode(ledVerde, OUTPUT);
  pinMode(ledAmarelo, OUTPUT);
  pinMode(ledVermelho, OUTPUT);

  lcd.begin(16, 2);
  lcd.clear();

  // Mensagem de boas-vindas
  lcd.setCursor(0, 0);
  lcd.print("DevPrime deseja");
  lcd.setCursor(0, 1);
  lcd.print("Boas Vindas :)");

  lcd.createChar(0, shit);
  lcd.createChar(1, smile);
  lcd.createChar(2, serious);
  lcd.createChar(3, vinhoCima);
  lcd.createChar(4, vinhoBaixo);

  // Parte de baixo da taça
  lcd.setCursor(15, 0); 
  lcd.write(byte(3)); // Parte de cima da taça

  // Parte de baixo da taça
  lcd.setCursor(15, 1); 
  lcd.write(byte(4)); 

  delay(2000); // Mostra a mensagem por 4 segundos

  lcd.clear(); // Apaga as boas-vindas para iniciar monitoramento
}

void loop() {
  int leitura = analogRead(sensorLDR);
  int porcentagem = map(leitura, 1023, 0, 0, 100);

  Serial.print("Luminosidade: ");
  Serial.print(porcentagem);
  Serial.println("%");

  // Atualiza o LCD
  lcd.setCursor(0, 0);
  lcd.print("Luminosidade:");
  lcd.setCursor(0, 1);
  lcd.print(porcentagem);
  lcd.print("%      "); // Espaço extra pra apagar lixo

  // Limpa o espaço do emoji antes de escrever
  lcd.setCursor(15, 1);
  lcd.print(" "); // Apaga o que tinha

  // Controle dos LEDs e Emoji
  if (porcentagem >= 0 && porcentagem <= 30) {
    digitalWrite(ledVerde, HIGH);
    digitalWrite(ledAmarelo, LOW);
    digitalWrite(ledVermelho, LOW);

    lcd.setCursor(15, 1);
    lcd.write(byte(1)); // smile
  } 
  else if (porcentagem > 30 && porcentagem < 60) {
    digitalWrite(ledVerde, LOW);
    digitalWrite(ledAmarelo, HIGH);
    digitalWrite(ledVermelho, LOW);

    lcd.setCursor(15, 1);
    lcd.write(byte(2)); // serious
  } 
  else {
    digitalWrite(ledVerde, LOW);
    digitalWrite(ledAmarelo, LOW);
    digitalWrite(ledVermelho, HIGH);

    lcd.setCursor(15, 1);
    lcd.write(byte(0)); // shit
  }

  // Checa estado e toca o buzzer se necessário
  if ((porcentagem >= 60 && porcentagem < 100)) {
    tone(buzzer, 1000); // Buzzer liga com frequência de 1kHz
    delay(3000);
    noTone(buzzer);     // Desliga o buzzer
  }

  delay(500);
}
